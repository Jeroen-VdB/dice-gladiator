@page "/"
@using System.Text.Json;
@inject GameService GameService;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager;
@inject ILogger<Game> logger;

<PageTitle>Dice Gladiator</PageTitle>

<EnemyDisplay @ref="EnemyDisplay" />

<EndRound @ref="EndRoundModal" NextRound="Refresh" />

<button class="btn btn-primary" @onclick="() => EndRoundModal?.Open()">FIGHT</button>

<Leaderboard @ref="Leaderboard" />

@code {
	private EnemyDisplay? EnemyDisplay { get; set; }
	private EndRound? EndRoundModal { get; set; }
	private Leaderboard? Leaderboard { get; set; }

	protected override async Task OnInitializedAsync()
	{
		var gameSession = await localStorage.GetItemAsync<GameService>("gameSession");

		if (!GameService.Players.Any() && gameSession == null)
		{
			NavigationManager.NavigateTo("new-game");
		}
		else if (!GameService.Players.Any())
		{
			GameService.ResumePreviousGame(gameSession);
			Refresh();

			logger.LogInformation("GameSession: {gamesession}", JsonSerializer.Serialize(gameSession));
			logger.LogInformation("GameService: {GameService}", JsonSerializer.Serialize(GameService));
		}
	}

	private void Refresh()
	{
		EnemyDisplay?.Refresh();
		Leaderboard?.Refresh();
		StateHasChanged();
	}
}
